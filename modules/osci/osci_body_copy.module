<?php

function osci_body_copy_field_info()
{
    return array(
        'osci_body_copy' => array(
            'label' => t('Body Copy'),
            'description' => t('Includes text area for body copy and multi-value field for footnotes'),
            'default_widget' => 'osci_body_copy_widget',
            'default_formatter' => 'osci_body_copy_formatter'
        )
    );
}

function osci_body_copy_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)
{
dpm($_POST);
    if ($field['type'] === 'osci_body_copy') {
        $items[0]['footnote_index'] = (int)$items[0]['footnotes']['footnote_index'];
        $items[0]['body_copy_format'] = $items[0]['body_copy']['format'];
        $items[0]['body_copy'] = $items[0]['body_copy']['value'];

        $finalFootnotes = array();
        if (is_array($_POST[$field['field_name']]['und'][0]['footnotes'])) {
            $footnotes = $_POST[$field['field_name']]['und'][0]['footnotes'];
            foreach($footnotes as $id => $footnote) { 
                $uid = substr($field['field_name'], 6) . '-' . $entity->nid . '-' . $id;
                if (empty($footnote) || $id == 'footnote_index' || $id == 'footnote-blank') {
                    continue;
                }
                $finalFootnotes[$uid] = $footnote;
            }
        }
        $items[0]['footnotes'] = serialize($finalFootnotes);
    }
}

function osci_body_copy_field_is_empty($item, $field)
{
    $return = false;

    if (empty($item['body_copy'])) {
        $return = true;
    }

    return $return;
}

/***********************************************************************
 *  Field Type API: Formatter
 **********************************************************************/

function osci_body_copy_field_formatter_info()
{
    return array(
        'osci_body_copy_formatter' => array(
            'label' => t('Body Copy'),
            'field types' => array('osci_body_copy')
        )
    );
}

function osci_body_copy_field_formatter_view($object_type, $object, $field, $instance, $langcode, $items, $display)
{
    $element = array();

    if ($display['type'] == 'osci_body_copy_formatter') {
        foreach($items as $delta => $item) {
            $markup = $item['body_copy'];

            $footnotes = unserialize($item['footnotes']);
            $markup .= theme_item_list(array('items' => $footnotes, 'title' => 'Footnotes', 'type' => 'ol', 'attributes' => array()));

            $element[$delta]['#markup'] = $markup;
        }
    }

    return $element;
}

/**************************************************************************
 * Field Type API: Widget
 **************************************************************************/

function osci_body_copy_field_widget_info()
{

    return array(
        'osci_body_copy_widget' => array(
            'label' => t('Body copy with footnotes'),
            'field types' => array('osci_body_copy'),
            'settings' => array('body_copy_rows' => 5, 'footnote_rows' => 3),
            'behaviors' => array('default value' => FIELD_BEHAVIOR_NONE)
        )
    );
}

function osci_body_copy_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)
{
    drupal_add_library('system', 'ui.tabs');

    $footnoteCount = isset($items[$delta]['footnote_index']) ? $items[$delta]['footnote_index'] : 0;
    $footnoteCount = $footnoteCount ? $footnoteCount : 0;

    $bodyCopy = array(
        '#type' => 'fieldset',
        '#attached' => array(
            'js' => array(drupal_get_path('module', 'osci_body_copy') . '/js/body_copy_field.js'),
        ),
        'body_copy' => array(
            '#type' => 'text_format',
            '#base_type' => 'textarea',
            '#default_value' => isset($items[$delta]['body_copy']) ? $items[$delta]['body_copy'] : NULL,
            '#rows' => $instance['widget']['settings']['body_copy_rows'],
            '#format' => null,
        ),
        'footnotes' => array(
            '#type' => 'fieldset',
            '#attributes' => array('class' => array('footnotes-wrapper')),
            '#title' => t('Footnotes'),
            'footnote_index' => array(
                '#type' => 'hidden',
                '#default_value' => $footnoteCount
            ),
        )
    );

    $footnotes = array('footnote-blank' => '');
    $loadnotes = isset($items[$delta]['footnotes']) ? unserialize($items[$delta]['footnotes']) : array();
    $footnotes += $loadnotes ? $loadnotes : array();
 
    $bodyCopy['footnotes']['add_another'] = array(
        '#markup' => '<a href="#" class="footnote-add-another">Add Footnote</a>',
        '#weight' => -1,
    );

    $fieldName = substr($field['field_name'], 6);
    $nid = $form['nid']['#value'];

    $fnList = array();
    foreach ($footnotes as $id => $footnote) {
        if ($id !== 'footnote-blank') {
            $id = substr($id, strrpos($id, '-') + 1); 
        }
        $fnId = $fieldName . '-' . $nid . '-' . $id;
        $bodyCopy['footnotes'][$id] = array(
            '#title' => $id . ' <span>(' . $fieldName . '-' . $nid . '-' . $id . ')</span>',
            //'#base_type' => 'textarea',
            '#type' => 'textarea',
            '#default_value' => $footnote,
            '#rows' => $instance['widget']['settings']['footnote_rows'],
            '#attributes' => array('class' => array('footnote')),
            '#prefix' => '<div id="' . $fnId . '" data-fnprefix="' . $fieldName . '-' . $nid . '-">',
            '#suffix' => '</div>',
            '#weight' => $id,
        );
        //if ($id !== 'footnote-blank') {
            $fnList[] = '<li><a href="#' . $fnId . '">' . $id . '</a></li>';
        //}
    }
    
    $bodyCopy['footnotes']['footnote_list'] = array(
        //'#markup' => theme_item_list(array('items' => $fnList, 'title' => null, 'type' => 'ul', 'attributes' => array())),
        '#markup' => '<ul>' . implode("\n", $fnList) . '</ul>',
        '#weight' => 0
    );

    return $element + $bodyCopy;
}

/**
 * Implements hook_field_widget_settings_form().
 */
function osci_body_copy_field_widget_settings_form($field, $instance) 
{
    $widget = $instance['widget'];
    $settings = $widget['settings'];

    $form['body_copy_rows'] = array(
        '#type' => 'textfield',
        '#title' => t('Body Copy Rows'),
        '#description' => t('The number of rows to use for the Body Copy textarea.'),
        '#default_value' => $settings['body_copy_rows'],
        '#required' => TRUE,
        '#element_validate' => array('_element_validate_integer_positive')
    );

    $form['footnote_rows'] = array(
        '#type' => 'textfield',
        '#title' => t('Footnote Rows'),
        '#description' => t('The number of rows to use for the Footnote textarea.'),
        '#default_value' => $settings['footnote_rows'],
        '#required' => TRUE,
        '#element_validate' => array('_element_validate_integer_positive')
    );

    return $form;
}

?>
