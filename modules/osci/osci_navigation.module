<?php

function osci_navigation_init()
{
    drupal_add_js(array('osci_navigation' => array(
    	'reader_id' => variable_get('osci_navigation_reader_id', 'osci_viewer_wrapper'),
        'header_id' => variable_get('osci_navigation_header_id', 'osci_header'),
    	'toc_id' => variable_get('osci_navigation_toc_id', 'osci_table_of_contents_wrapper'),
    	'nav_id' => variable_get('osci_navigation_id', 'osci_navigation_wrapper'),
    	'api_endpoint' => variable_get('osci_navigation_api_endpoint', 'http://osci.localhost/api/navigation/'),
    	'content_endpoint' => variable_get('osci_navigation_content_endpoint', 'http://osci.localhost/node/{$nid}/bodycopy'),
    	'prev_link_id' => variable_get('osci_navigation_prev_link_id', 'osci_nav_prev'),
    	'next_link_id' => variable_get('osci_navigation_next_link_id', 'osci_nav_next'),
    	'cache_time' => (int)variable_get('osci_navigation_cache_time', 86400),
    )), 'setting');
}

function osci_navigation_menu()
{
    $items = array();

    $items['admin/config/user-interface/osci_navigation'] = array(
        'title' => 'OSCI Navigation settings',
        'description' => 'Configure the OSCI navigation module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('osci_navigation_admin'),
        'access arguments' => array('access administration pages'),
    );

    return $items;
}

function osci_navigation_admin()
{
    $form = array();

    $form['osci_navigation_reader_id'] = array(
        '#type' => 'textfield',
    	'#title' => t('Reader Id'),
    	'#default_value' => variable_get('osci_navigation_reader_id', 'osci_viewer_wrapper'),
    	'#description' => t("The HTML Id of the div that will contain OSCI reader layout."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_header_id'] = array(
        '#type' => 'textfield',
    	'#title' => t('Header Id'),
    	'#default_value' => variable_get('osci_navigation_header_id', 'osci_header'),
    	'#description' => t("The HTML Id of the div that will contain OSCI header."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_id'] = array(
        '#type' => 'textfield',
    	'#title' => t('Navigation Id'),
    	'#default_value' => variable_get('osci_navigation_id', 'osci_navigation_wrapper'),
    	'#description' => t("The HTML Id of the div that will contain OSCI navigation controls."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_toc_id'] = array(
        '#type' => 'textfield',
    	'#title' => t('Table of Contents Id'),
    	'#default_value' => variable_get('osci_navigation_toc_id', 'osci_table_of_contents_wrapper'),
    	'#description' => t("The HTML Id of the div that will contain OSCI table of contents."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_api_endpoint'] = array(
        '#type' => 'textfield',
    	'#title' => t('Navigation Api Endpoint'),
    	'#default_value' => variable_get('osci_navigation_api_endpoint', 'http://osci.localhost/api/navigation/'),
    	'#description' => t("The url of the navigation service endpoint."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_content_endpoint'] = array(
        '#type' => 'textfield',
    	'#title' => t('Content Endpoint'),
    	'#default_value' => variable_get('osci_navigation_content_endpoint', 'http://osci.localhost/node/{$nid}/bodycopy'),
    	'#description' => t("The url for retrieving HTML5 content."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_prev_link_id'] = array(
        '#type' => 'textfield',
    	'#title' => t('Prev Link Id'),
    	'#default_value' => variable_get('osci_navigation_prev_link_id', 'osci_nav_prev'),
    	'#description' => t("The HTML id of the previous navigation link."),
    	'#required' => TRUE,
    );

   $form['osci_navigation_next_link_id'] = array(
        '#type' => 'textfield',
    	'#title' => t('Next Link Id'),
    	'#default_value' => variable_get('osci_navigation_next_link_id', 'osci_nav_next'),
    	'#description' => t("The HTML id of the next navigation link."),
    	'#required' => TRUE,
    );

    $form['osci_navigation_cache_time'] = array(
        '#type' => 'textfield',
    	'#title' => t('Cache Lifetime'),
    	'#default_value' => variable_get('osci_navigation_cache_time', 86400),
    	'#description' => t("How long to cache each node (in seconds)."),
    	'#required' => TRUE,
    );

    return system_settings_form($form);
}

function osci_navigation_services_resources()
{
    return array(
        'navigation' => array(
            'retrieve' => array(
                'callback' => '_osci_navigation_get_toc',
                'args' => array(
                    array(
                        'name' => 'nid',
                        'optional' => false,
                        'type' => 'int',
                        'description' => 'The nid to load the table of contents for.',
                        'source' => array('path' => '0')
                    ),
                    array(
                        'name' => 'full_book',
                        'type' => 'int',
                        'description' => 'Display navigation details for the full book this node belongs to.',
                        'optional' => true,
                        'source' => array('param' => 'full_book'),
                        'default' => false
                    )
                ),
                'access callback' => 'user_access',
                'access arguments' => array('access content'),
                'access arguments append' => false
            ),
            'index' => array(
                'callback' => '_osci_navigation_get_books',
                'access callback' => 'user_access',
                'access arguments' => array('access content'),
                'access arguments append' => false
            ),
            'relationships' => array(
                'next' => array(
                    'callback' => '_osci_navigation_next',
                    'args' => array(),
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => false
                ),
                'prev' => array(
                    'callback' => '_osci_navigation_prev',
                    'args' => array(),
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => false
                ),
                'parent' => array(
                    'callback' => '_osci_navigation_parent',
                    'args' => array(),
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => false
                ),
                'book' => array(
                    'callback' => '_osci_navigation_get_book_toc',
                    'args' => array(),
                    'access callback' => 'user_access',
                    'access arguments' => array('access content'),
                    'access arguments append' => false
                )
            )
        )
    );
}

function _osci_navigation_get_toc($nid, $fullBook = false)
{
    $toc = null;
    $node = node_load($nid);

    if (isset($node->book)) {
        if ($fullBook) {
            foreach (book_get_books() as $book_id => $book) {
                if ($book['bid'] == $node->book['bid']) {
                    $toc = book_menu_subtree_data($book);
                    $toc = _osci_navigation_clean_toc($toc);
                    _osci_navigation_load_additional_toc_data($toc);
                    break;
                }
            }
        } else {
            $toc = book_menu_subtree_data($node->book);
            $toc = _osci_navigation_clean_toc($toc);
            _osci_navigation_load_additional_toc_data($toc);
        }
    }

    return $toc;
}

function _osci_navigation_get_book_toc($nid)
{
    $toc = null;
    $node = node_load($nid);

    if (isset($node->book)) {
        foreach (book_get_books() as $book_id => $book) {
            if ($book['bid'] == $node->book['bid']) {
                $toc = book_menu_subtree_data($book);
                $toc = _osci_navigation_clean_toc($toc);
                _osci_navigation_load_additional_toc_data($toc);
                break;
            }
        }
    }

    return $toc;
}

function _osci_navigation_get_books()
{
    $allBooks = array();
    $books = book_get_books();

    foreach($books as $book) {
        $allBooks['bid_' . $book['bid']] = array_pop(_osci_navigation_clean_toc(array('link' => $book)));
    }

    return $allBooks;
}

function _osci_navigation_next($nid)
{
    $toc = array();
    $node = node_load($nid);

    if ($node->book) {
        if ($next = book_next($node->book)) {
            $toc = _osci_navigation_clean_toc(array('link' => $next));
        }
    }

    return $toc;
}

function _osci_navigation_prev($nid)
{
    $toc = array();
    $node = node_load($nid);

    if ($node->book) {
        if ($prev = book_prev($node->book)) {
            $toc = _osci_navigation_clean_toc(array('link' => $prev));
        }
    }

    return $toc;
}

function _osci_navigation_parent($nid)
{
    $toc = array();
    $node = node_load($nid);
    if ($node->book['plid'] && $parent = book_link_load($node->book['plid'])) {
        $toc = _osci_navigation_clean_toc(array('link' => $parent));
    }
    return $toc;
}

function _osci_navigation_clean_toc($toc)
{
    $cleanToc = _osci_navigation_clean_toc_iterate($toc);
    $totalLength = 0;
    $rootId = null;
    foreach($cleanToc as $id => $toc) {
        $totalLength += $toc['length'];
        $rootId = ($rootId === null) ? $id : $rootId;
    }

    if ($rootId) {
        $cleanToc[$rootId]['total_length'] = $totalLength;
    }

    return $cleanToc;
}

function _osci_navigation_clean_toc_iterate($toc)
{
    $cleanToc = array();

    $id = null;
    $nids = array();
    foreach($toc as $k => $v) {
        switch ($k) {
            case 'link':
                if (isset($v['nid'])) {
                    $nid = $v['nid'];
                } else {
                    $nid = substr($v['href'], strrpos($v['href'], '/') + 1);
                }
                $nids[] = $nid;

                $id = 'nid_' . $nid;
                $nextPage = array();
                $prevPage = array();
                $parentPage = array();
                if ($v['mlid']) {
                    if ($prev = book_prev($v)) {
                        $prevPage = array(
                            'href' => url($prev['href']),
                            'title' => check_plain($prev['title']),
                            'mlid' => $prev['mlid'],
                            'bodycopy' => url($prev['href'] . '/bodycopy'),
                            'nid' => substr($prev['href'], strrpos($prev['href'], '/') + 1)
                        );
                        $nids[] = $prevPage['nid'];
                    }

                    if ($v['plid'] && $parent = book_link_load($v['plid'])) {
                        $parentPage = array(
                            'href' => url($parent['href']),
                            'title' => check_plain($parent['title']),
                            'mlid' => $parent['mlid'],
                            'bodycopy' => url($parent['href'] . '/bodycopy'),
                            'nid' => substr($parent['href'], strrpos($parent['href'], '/') + 1)
                        );
                        $nids[] = $parentPage['nid'];
                    }

                    if ($next = book_next($v)) {
                        $nextPage = array(
                            'href' => url($next['href']),
                            'title' => check_plain($next['title']),
                            'mlid' => $next['mlid'],
                            'bodycopy' => url($next['href'] . '/bodycopy'),
                            'nid' => substr($next['href'], strrpos($next['href'], '/') + 1)
                        );
                        $nids[] = $nextPage['nid'];
                    }
                }

                $cleanToc[$id] = array(
                    'nid'      => $nid,
                    'title'    => $v['title'],
                    'href'     => url($v['href']),
                    'bodycopy' => url($v['href'] . '/bodycopy'),
                    'mlid'     => $v['mlid'],
                    'next'     => $nextPage,
                    'prev'     => $prevPage,
                    'parent'   => $parentPage
                );

                if (isset($v['bid'])) {
                    $cleanToc[$id]['bid'] = $v['bid'];
                }

                break;
            case 'below':
                //if (is_array($v) && !empty($v)) {
                //    $cleanToc[$bidNid]['children'] = _osci_navigation_clean_toc_iterate($v);
                //}
                //break;
            default:
                if (is_array($v) && !empty($v)) {
                    $cleanToc = array_merge($cleanToc, _osci_navigation_clean_toc_iterate($v));
                }
        }
    }

    $contentLengths = _osci_navigation_get_node_content_length($nids);
    if (!empty($contentLengths)) {
        foreach($cleanToc as $id => $toc) {
            if (isset($contentLengths[$toc['nid']])) {
                $cleanToc[$id]['length'] = $contentLengths[$toc['nid']];
            }
            if (isset($toc['next']['nid']) && isset($contentLengths[$toc['next']['nid']])) {
                $cleanToc[$id]['next']['length'] = $contentLengths[$toc['next']['nid']];
            }
            if (isset($toc['prev']['nid']) && isset($contentLengths[$toc['prev']['nid']])) {
                $cleanToc[$id]['prev']['length'] = $contentLengths[$toc['prev']['nid']];
            }
            if (isset($toc['parent']['nid']) && isset($contentLengths[$toc['parent']['nid']])) {
                $cleanToc[$id]['parent']['length'] = $contentLengths[$toc['parent']['nid']];
            }
        }
    }

    return $cleanToc;
}

function osci_navigation_node_submit($node, $form, &$form_state)
{
    if (isset($form_state['node']->field_osci_content_length)) {
        $wordCount = 0;

        foreach($form_state['values'] as $k => $v) {
            if (strpos($k, 'field_osci') === 0) {
                if (isset($v['und'][0]['body_copy'])) {
                    $wordCount += str_word_count(strip_tags($v['und'][0]['body_copy']['value']));
                } elseif (isset($v['und'][0]['value'])) {
                    $wordCount += str_word_count(strip_tags($v['und'][0]['value']));
                }
            }
        }

        $form_state['node']->field_osci_content_length['und'][0]['value'] = $wordCount;
    }
}

function osci_navigation_form_alter(&$form, &$form_state, $form_id)
{
    if (strpos($form_id, '_node_form') !== false && isset($form['field_osci_content_length'])) {
        $form['field_osci_content_length']['und'][0]['value']['#type'] = 'hidden';
    }
}

function _osci_navigation_get_node_content_length($nids)
{
    $contentLengths = array();

    if ($nodes = node_load_multiple($nids)) {
        foreach($nodes as $nid => $node) {
            $contentLengths[$nid] = isset($node->field_osci_content_length['und'][0]['value']) ? $node->field_osci_content_length['und'][0]['value'] : 0;
        }
    }

    return $contentLengths;
}

function _osci_navigation_load_additional_toc_data(&$toc)
{
    $imageData = array();

    foreach($toc as $tocId => $data) {
        $nid = (int)$data['nid'];

        $node = node_load($nid);
        $view = node_view($node, "body_copy");
        $subSections = array();
        foreach($view as $k => $v) {
            if (is_array($v) && isset($v['#weight'])) {
                $subSections[$v['#weight']] = array(
                    'title' => $v['#title'],
                    'field' => $v['#field_name'],
                    'nid' => $nid
                );
            }
        }

        if ($subSections) {
            ksort($subSections);
            $data['sub_sections'] = array_values($subSections);
        }

        if (isset($imageData[$nid])) {
            $data['plate_image'] = $imageData[$nid];
        } else {
            $imageData[$nid] = _osci_navigation_get_image_data($nid);
            $data['plate_image'] = $imageData[$nid];
        }

        $nid = (int)$data['next']['nid'];
        if (isset($imageData[$nid])) {
            $data['next']['plate_image'] = $imageData[$nid];
        } else {
            $imageData[$nid] = _osci_navigation_get_image_data($nid);
            $data['next']['plate_image'] = $imageData[$nid];
        }

        $nid = (int)$data['prev']['nid'];
        if (isset($imageData[$nid])) {
            $data['prev']['plate_image'] = $imageData[$nid];
        } else {
            $imageData[$nid] = _osci_navigation_get_image_data($nid);
            $data['prev']['plate_image'] = $imageData[$nid];
        }

        $nid = (int)$data['parent']['nid'];
        if (isset($imageData[$nid])) {
            $data['parent']['plate_image'] = $imageData[$nid];
        } else {
            $imageData[$nid] = _osci_navigation_get_image_data($nid);
            $data['parent']['plate_image'] = $imageData[$nid];
        }

        $toc[$tocId] = $data;
    }
}

function _osci_navigation_get_image_data($nid)
{
    $imageData = array();

    $node = node_load($nid);
    if ($node->field_osci_plate_image['und'][0]['nid']) {
        $imageNode = node_load($node->field_osci_plate_image['und'][0]['nid']);
        $fullImageUrl = file_create_url($imageNode->field_image['und'][0]['uri']);
        $thumbnail165Url = image_style_url('osci_thumbnail_165w', $imageNode->field_image['und'][0]['uri']);
        $thumbnail100Url = image_style_url('osci_thumbnail_100w', $imageNode->field_image['und'][0]['uri']);

        $imageData = array(
            'full_image_url' => $fullImageUrl,
            'thumbnail_165w_url' => $thumbnail165Url,
            'thumbnail_100w_url' => $thumbnail100Url
        );
    }

    return $imageData;
}
?>
